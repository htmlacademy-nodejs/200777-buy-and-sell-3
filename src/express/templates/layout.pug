doctype html
html(lang='ru')
  head
    meta(charset='UTF-8')
    meta(name='description' content='Доска объявлений — современный веб-сайт, упрощающий продажу или покупку абсолютно любых вещей.')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    meta(http-equiv='X-UA-Compatible' content='ie=edge')
    title Куплю Продам
    link(rel='stylesheet' href='/css/style.min.css')
    style.
      a.active {
        pointer-events: none;
      }
      .server-error{
        border-radius: 10px;
        color: white;
        background-color: tomato;
        margin: 20px 0;
        padding: 10px;
      }
      .client-error{
        position: fixed;
        width: 100%;
        padding: 10px;
        color: white;
        text-align: center;
        z-index: 1;
      }
      .client-error__success {
        background-color: darkseagreen;
      }
      .client-error__fail {
        background-color: tomato;
      }
      .comment-card__date{
        margin-left: auto;
      }
  body
    -
      const MAX_DESCRIPTION_LENGTH = 55;
      const getRandomInt = (max) => Math.ceil(Math.random()*max);

    mixin insertErrorMessages(messages)
      if messages
        each message of messages
          .server-error= message

    mixin ticketLabel(type)
      span(class!=attributes.class || `ticket-card__label`) #{type === `offer` ? `Куплю` : `Продам`}

    mixin ticketCard()
      .ticket-card(class=`ticket-card--color0${getRandomInt(8)}`)
        block

    mixin tiketCardDescription(description)
      .ticket-card__desc
        p #{description.slice(0, MAX_DESCRIPTION_LENGTH)}

    mixin insertOfferImage(offer)
      img(src=`/img/${offer.picture ? offer.picture : 'blank.png'}` alt=offer.title)

    mixin categoryImage(category)
      -
        const idPadded = `0${getRandomInt(6)}`

      img(src=`/img/cat${idPadded}.jpg` srcset=`/img/cat${idPadded}@2x.jpg 2x` alt=category.name)

    mixin pagination(page, totalPages, width, prefix)
      -
        // вычислим начальную и конечную страницу диапазона без учёта ограничений
        let start = page - width;
        let end = page + width;

        // передвинем диапазон вправо, если он начинается с номера меньше единицы
        if (start < 1) {
          end += 1 - start;
          start = 1;
        }

        // передвинем диапазон влево, если он заканчивается номером больше количества страниц
        if (end > totalPages) {
          start -= end - totalPages;
          end = totalPages;
        }

        // если мы оказались в этой ветке, значит, всего страниц слишком мало. Делаем начало диапазона 1
        if (start < 1) {
          start = 1;
        }
        let i = start - 1;

      .tickets-list__pagination
        ul.pagination
          if start > 1
            li
              a(href=`${prefix}page=${page - 1}`)= Назад
          while i++ < end
            li
              a(class={active: i === page} href=`${prefix}page=${i}`)= i
          if end < totalPages
            li
              a(href=`${prefix}page=${page + 1}`)= Вперёд


    include partials/header.pug
    block content
    include partials/footer.pug
    include partials/offer-template.pug
    script(src='/js/vendor.js')
    script(src='/js/main.js')
